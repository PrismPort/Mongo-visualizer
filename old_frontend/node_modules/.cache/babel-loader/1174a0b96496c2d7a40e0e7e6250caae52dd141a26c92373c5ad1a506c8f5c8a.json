{"ast":null,"code":"var _jsxFileName = \"/home/me/VisualStudioCodeProjects/mongoDB-projekt/Visual-MongoInterface/frontend/src/components/fetchStats.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatsContext = /*#__PURE__*/createContext(undefined);\nconst LoadingOverlay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed flex items-center justify-center w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-32 h-32 slow-spin bg-opacity-0\",\n      children: \"LADEANIMATION!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = LoadingOverlay;\nconst StatsFetcher = ({\n  children\n}) => {\n  _s();\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [database, setDatabase] = useState('');\n  const [collection, setCollection] = useState('');\n  const handleAnalyzeCollections = async (mongoURL, database, collection) => {\n    updateDatabase(database);\n    updateCollection(collection);\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:4000/analyze/${database}/${collection}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'mongoURL': mongoURL\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      setStats(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateStats = newStats => {\n    setStats(newStats);\n  };\n  const updateDatabase = newDatabase => {\n    setDatabase(newDatabase);\n  };\n  const updateCollection = newCollection => {\n    setCollection(newCollection);\n  };\n\n  // Pass the fetchDataAndUpdateContext function to the children\n  const contextValue = {\n    stats,\n    database,\n    collection,\n    handleAnalyzeCollections,\n    updateStats\n  };\n  return /*#__PURE__*/_jsxDEV(StatsContext.Provider, {\n    value: contextValue,\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(StatsFetcher, \"lRUnVTToEPRCNVGsuxNrh2iTOCQ=\");\n_c2 = StatsFetcher;\nexport default StatsFetcher;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingOverlay\");\n$RefreshReg$(_c2, \"StatsFetcher\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","StatsContext","undefined","LoadingOverlay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatsFetcher","_s","stats","setStats","loading","setLoading","database","setDatabase","collection","setCollection","handleAnalyzeCollections","mongoURL","updateDatabase","updateCollection","response","fetch","method","headers","data","json","console","log","error","updateStats","newStats","newDatabase","newCollection","contextValue","Provider","value","_c2","$RefreshReg$"],"sources":["/home/me/VisualStudioCodeProjects/mongoDB-projekt/Visual-MongoInterface/frontend/src/components/fetchStats.tsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\ninterface Type {\n    name: string;\n    values: any[];\n}\n\n\ninterface Stat {\n    name: string;\n    count: Number;\n    type: Array<string>;\n    probability: Number;\n    types?: Type[];\n  }\n\n\ninterface StatsContextType {\n    stats: Stat[]; // replace any with the actual type of stats\n    database: string;\n    collection: string;\n    handleAnalyzeCollections: (mongoURL: string, database: string, collection: string) => Promise<void>;\n    updateStats: (newStats: Stat[]) => void; // Add a new function to update the stats\n\n}\n\nexport const StatsContext = createContext<StatsContextType | undefined>(undefined);\n\n\nconst LoadingOverlay = () => {\n    return (\n        <div className='fixed flex items-center justify-center w-full h-full'>\n            <div className='w-32 h-32 slow-spin bg-opacity-0'>LADEANIMATION!!</div>\n        </div>\n    );\n}\n\n\nconst StatsFetcher = ({ children }) => {\n    const [stats, setStats] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [database, setDatabase] = useState('');\n    const [collection, setCollection] = useState('');\n\n\n    const handleAnalyzeCollections = async (mongoURL: string, database: string, collection: string) => {\n\n        updateDatabase(database);\n        updateCollection(collection);\n        setLoading(true);\n        try {\n            const response = await fetch(`http://localhost:4000/analyze/${database}/${collection}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'mongoURL': mongoURL as string,\n                },\n            });\n            const data = await response.json();\n            console.log(data);\n            setStats(data);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const updateStats = (newStats: typeof stats) => {\n        setStats(newStats);\n    }\n\n    const updateDatabase = (newDatabase: string) => {\n        setDatabase(newDatabase);\n    }\n\n    const updateCollection = (newCollection: string) => {\n        setCollection(newCollection);\n    }\n\n    // Pass the fetchDataAndUpdateContext function to the children\n    const contextValue = {\n        stats,\n        database,\n        collection,\n        handleAnalyzeCollections,\n        updateStats\n    };\n\n    return (\n        <StatsContext.Provider value={contextValue}>\n            {loading ? <LoadingOverlay/> : children}\n        </StatsContext.Provider>\n    );\n};\n\nexport default StatsFetcher;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}