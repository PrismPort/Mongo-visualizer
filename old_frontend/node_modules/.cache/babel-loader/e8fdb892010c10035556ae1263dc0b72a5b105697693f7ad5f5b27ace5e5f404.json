{"ast":null,"code":"var _jsxFileName = \"/home/me/VisualStudioCodeProjects/mongoDB-projekt/Visual-MongoInterface/frontend/src/components/MongoREST.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport './MongoREST.css';\nimport { useState } from 'react';\nimport StatsFetcher from './fetchStats.tsx';\nimport { StatsContext } from './fetchStats.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MongoLogin = () => {\n  _s();\n  const mongoURL = localStorage.getItem('mongoURL');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [adress, setAdress] = useState('');\n  const [port, setPort] = useState('');\n\n  // send as body to backend when submit\n  const loginData = {\n    username: username,\n    password: password,\n    adress: adress,\n    port: port\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginData = {\n      username: data.get('username'),\n      password: data.get('password'),\n      adress: data.get('adress'),\n      port: data.get('port')\n    };\n    console.log(loginData);\n    try {\n      const response = await fetch('http://localhost:4000/connect-to-mongodb', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      if (response.ok) {\n        console.log('Login successful');\n        // consume response body as json\n        const body = await response.json();\n        console.log(body);\n\n        // save token to local storage\n        localStorage.setItem('mongoURL', body.mongoURL);\n\n        // reload page\n        window.location.reload();\n      } else {\n        console.error('Login failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  if (mongoURL) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex min-h-full flex-col justify-center px-6 py-12 lg:px-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\",\n          children: \"Connect to MongoDB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 sm:mx-auto sm:w-full sm:max-w-md\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"space-y-4\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium leading-6 text-gray-900\",\n              children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                className: \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium leading-6 text-gray-900\",\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                className: \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium leading-6 text-gray-900\",\n              children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"adress\",\n                defaultValue: \"127.0.0.1\",\n                className: \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium leading-6 text-gray-900\",\n              children: [\"Port:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"port\",\n                defaultValue: \"27017\",\n                className: \"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"flex w-full justify-center rounded-md  bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(MongoLogin, \"y7sAXlEQTSvNKGvhBbFkQPOz5OA=\");\n_c = MongoLogin;\nconst MongoOptions = () => {\n  _s2();\n  const [databases, setDatabases] = useState([]); // should be a global context\n  const [collections, setCollections] = useState({});\n  const context = useContext(StatsContext);\n  if (!context) {\n    // handle the case where context is undefined\n    return null;\n  }\n  const {\n    stats,\n    handleAnalyzeCollections\n  } = context;\n  const mongoURL = localStorage.getItem('mongoURL');\n  const handleShowDatabases = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/query-databases', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'mongoURL': mongoURL\n        }\n      });\n      const data = await response.json();\n      setDatabases(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleLoadCollections = async database => {\n    try {\n      const response = await fetch(`http://localhost:4000/query/${database}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'mongoURL': mongoURL\n        }\n      });\n      const data = await response.json();\n      setCollections(prevState => ({\n        ...prevState,\n        [database]: data\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleAnalyze = async (database, collection) => {\n    try {\n      await handleAnalyzeCollections(mongoURL, database, collection);\n      // console.log(stats);\n    } catch (error) {\n      console.error(error);\n      // handle error\n    }\n  };\n\n  if (!mongoURL) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex min-h-full flex-col justify-center px-6 py-12 lg:px-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\",\n          children: \"Connected to MongoDB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 sm:mx-auto sm:w-full sm:max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-900\",\n            children: [\"URL: \", mongoURL]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), databases.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mt-4\",\n            children: databases.map(database => {\n              var _collections$database;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `#${database}`,\n                  className: \"hover:underline text-blue-500 hover:text-blue-700\",\n                  onClick: () => handleLoadCollections(database),\n                  children: [\"\\u251C\\u2500 \", database]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"ml-4\",\n                  children: (_collections$database = collections[database]) === null || _collections$database === void 0 ? void 0 : _collections$database.map((collection, index, arr) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `#${collection}`,\n                      className: \"hover:underline text-blue-500 hover:text-blue-700\",\n                      onClick: () => handleAnalyze(database, collection),\n                      children: [index === arr.length - 1 ? '└─ ' : '│─ ', collection]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 53\n                    }, this)\n                  }, collection, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 41\n                }, this)]\n              }, database, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleShowDatabases,\n            className: \"flex w-full justify-center rounded-md bg-blue-500 text-white py-2 px-4 mt-4 hover:bg-blue-700\",\n            children: \"Show all databases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteMongoURL,\n            className: \"flex w-full justify-center rounded-md bg-red-500 text-white py-2 px-4 mt-4 hover:bg-red-700\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n_s2(MongoOptions, \"GDjkekkAieALX7HT88u0mE54mmc=\");\n_c2 = MongoOptions;\nconst LoadingOverlay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed flex items-center justify-center w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-32 h-32 slow-spin bg-opacity-0\",\n      children: \"LADEANIMATION!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 9\n  }, this);\n};\n_c3 = LoadingOverlay;\nconst SchemaStats = () => {\n  _s3();\n  const context = useContext(StatsContext);\n  const [queries, setQueries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [queriesCopy, setQueriesCopy] = useState({});\n  if (!context) {\n    // handle the case where context is undefined\n    return null;\n  }\n  const {\n    stats,\n    database,\n    collection,\n    handleAnalyzeCollections,\n    updateStats\n  } = context;\n  const handleRowClick = name => {\n    if (selectedRows.includes(name)) {\n      setSelectedRows(selectedRows.filter(row => row !== name));\n    } else {\n      setSelectedRows([...selectedRows, name]);\n    }\n  };\n  const getColorBasedOnProbability = probability => {\n    // change hsl based on probability\n    const hue = probability * 120;\n    const saturation = 100;\n    const lightness = 50;\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  };\n  const getWidthBasedOnProbability = probability => {\n    return `${probability * 100}%`;\n  };\n\n  /* const queryToJSON = () => {\n      const query = { $and: queries };\n      return query;\n  } */\n\n  const addToQuery = key => {\n    handleRowClick(key);\n    const newQuery = {\n      [key]: {\n        $exists: true\n      }\n    };\n    setQueries(prevQueries => {\n      let updatedQueries;\n      const existingQueryIndex = prevQueries.findIndex(query => JSON.stringify(query) === JSON.stringify(newQuery));\n      if (existingQueryIndex !== -1) {\n        // Query exists, remove it\n        updatedQueries = [...prevQueries];\n        updatedQueries.splice(existingQueryIndex, 1);\n      } else {\n        // Query doesn't exist, add it\n        updatedQueries = [...prevQueries, newQuery];\n      }\n\n      // Send the updated query\n      if (updatedQueries.length > 1) {\n        sendQuery({\n          $and: updatedQueries\n        }, database, collection);\n        setQueriesCopy({\n          $and: updatedQueries\n        }); // deep copy for printing\n      } else if (updatedQueries.length === 1) {\n        // only one query, no need for an $and\n        sendQuery(updatedQueries[0], database, collection);\n        setQueriesCopy(updatedQueries[0]); // deep copy for printing\n      } else {\n        // Handle case when there are no queries\n        sendQuery({}, database, collection);\n      }\n      return updatedQueries;\n    });\n  };\n  const sendQuery = async (query, database, collection) => {\n    // console.log(query);\n    console.log(database, collection);\n    const url = `http://localhost:4000/query/${database}/${collection}`;\n    try {\n      setLoading(true);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'mongoURL': localStorage.getItem('mongoURL')\n        },\n        body: JSON.stringify(query)\n      });\n      const data = await response.json();\n\n      // show loading overlay\n      // setLoading(true);\n      // hide loading overlay when data is received\n      // setLoading(false);\n      //console.log(data.schema);\n      //console.log(data.collections);\n      updateStats(data.schema);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-left\",\n            children: \"key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-left\",\n            children: \"type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-right\",\n            children: \"count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-right\",\n            children: \"probability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stats.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `${index % 2 === 0 ? 'even-row' : 'odd-row'} ${selectedRows.includes(item.name) ? 'selected-row' : ''}`,\n          onClick: () => addToQuery(item.name),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-left monospace p-2\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-left monospace p-2\",\n            children: item.type.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-right monospace p-2\",\n            children: item.count.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-right monospace p-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: getWidthBasedOnProbability(item.probability),\n                backgroundColor: getColorBasedOnProbability(item.probability),\n                height: '100%'\n              },\n              children: item.probability.toFixed(2).toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Query:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 'small'\n        },\n        className: \"monospace\",\n        children: JSON.stringify(queriesCopy, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s3(SchemaStats, \"c/8xJZiudOjaXWdr6wVjvOPnM8w=\");\n_c4 = SchemaStats;\nconst DataDetails = () => {\n  _s4();\n  const context = useContext(StatsContext);\n  if (!context) {\n    // handle the case where context is undefined\n    return null;\n  }\n  const {\n    stats,\n    handleAnalyzeCollections,\n    updateStats\n  } = context;\n  // console.log(stats)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex min-h-full flex-col justify-start px-6 py-12 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\",\n        children: \"Key Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this), stats.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 sm:mx-auto sm:w-full sm:max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-900\",\n          children: [\"key: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }, this), item.types && Object.entries(item.types).map(([typeKey, typeValues], typeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"type: \", typeKey]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: typeValues.map((value, valueIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: value\n            }, valueIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 33\n          }, this)]\n        }, typeIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }, this))]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s4(DataDetails, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c5 = DataDetails;\nconst deleteMongoURL = () => {\n  localStorage.removeItem('mongoURL');\n  window.location.reload();\n};\nconst MongoREST = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(StatsFetcher, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/4\",\n          children: [/*#__PURE__*/_jsxDEV(MongoLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MongoOptions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3\",\n          children: /*#__PURE__*/_jsxDEV(SchemaStats, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3\",\n          children: /*#__PURE__*/_jsxDEV(DataDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c6 = MongoREST;\nexport { MongoREST };\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MongoLogin\");\n$RefreshReg$(_c2, \"MongoOptions\");\n$RefreshReg$(_c3, \"LoadingOverlay\");\n$RefreshReg$(_c4, \"SchemaStats\");\n$RefreshReg$(_c5, \"DataDetails\");\n$RefreshReg$(_c6, \"MongoREST\");","map":{"version":3,"names":["React","useContext","useState","StatsFetcher","StatsContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MongoLogin","_s","mongoURL","localStorage","getItem","username","setUsername","password","setPassword","adress","setAdress","port","setPort","loginData","handleSubmit","event","preventDefault","data","FormData","currentTarget","get","console","log","response","fetch","method","headers","body","JSON","stringify","ok","json","setItem","window","location","reload","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","defaultValue","_c","MongoOptions","_s2","databases","setDatabases","collections","setCollections","context","stats","handleAnalyzeCollections","handleShowDatabases","handleLoadCollections","database","prevState","handleAnalyze","collection","length","map","_collections$database","href","onClick","index","arr","deleteMongoURL","_c2","LoadingOverlay","_c3","SchemaStats","_s3","queries","setQueries","loading","setLoading","selectedRows","setSelectedRows","queriesCopy","setQueriesCopy","updateStats","handleRowClick","includes","filter","row","getColorBasedOnProbability","probability","hue","saturation","lightness","getWidthBasedOnProbability","addToQuery","key","newQuery","$exists","prevQueries","updatedQueries","existingQueryIndex","findIndex","query","splice","sendQuery","$and","url","schema","item","toString","count","style","width","backgroundColor","height","toFixed","fontSize","_c4","DataDetails","_s4","types","Object","entries","typeKey","typeValues","typeIndex","value","valueIndex","_c5","removeItem","MongoREST","_c6","$RefreshReg$"],"sources":["/home/me/VisualStudioCodeProjects/mongoDB-projekt/Visual-MongoInterface/frontend/src/components/MongoREST.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport './MongoREST.css';\nimport { useState } from 'react';\nimport StatsFetcher from './fetchStats.tsx';\nimport { StatsContext } from './fetchStats.tsx';\n\n\ninterface MongoLoginProps {\n    username: string;\n    password: string;\n    adress: string;\n    port: string;\n}\n\ninterface MongoLoginState {\n    username: string;\n    password: string;\n    adress: string;\n    port: string;\n}\n\nconst MongoLogin = () => {\n\n    const mongoURL = localStorage.getItem('mongoURL');\n\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [adress, setAdress] = useState('');\n    const [port, setPort] = useState('');\n\n    // send as body to backend when submit\n    const loginData: MongoLoginProps = {\n        username: username,\n        password: password,\n        adress: adress,\n        port: port,\n    };\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        const loginData: MongoLoginProps = {\n            username: data.get('username') as string,\n            password: data.get('password') as string,\n            adress: data.get('adress') as string,\n            port: data.get('port') as string,\n        };\n        console.log(loginData);\n        try {\n            const response = await fetch('http://localhost:4000/connect-to-mongodb', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(loginData),\n            });\n            if (response.ok) {\n                console.log('Login successful');\n                // consume response body as json\n                const body = await response.json();\n                console.log(body);\n\n                // save token to local storage\n                localStorage.setItem('mongoURL', body.mongoURL);\n\n                // reload page\n                window.location.reload();\n\n            } else {\n                console.error('Login failed');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n\n    if (mongoURL) {\n        return null;\n    } else {\n        return (\n            <>\n                <div className='flex min-h-full flex-col justify-center px-6 py-12 lg:px-8'>\n                    <h2 className='mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900'>Connect to MongoDB</h2>\n\n                    <div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n                        <form className='space-y-4' onSubmit={handleSubmit}>\n                            <label className='block text-sm font-medium leading-6 text-gray-900'>\n                                Username:\n                                <input type=\"text\" name=\"username\" className='block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6' />\n                            </label>\n                            <label className='block text-sm font-medium leading-6 text-gray-900'>\n                                Password:\n                                <input type=\"password\" name=\"password\" className='block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6' />\n                            </label>\n                            <label className='block text-sm font-medium leading-6 text-gray-900'>\n                                Address:\n                                <input type=\"text\" name=\"adress\" defaultValue={\"127.0.0.1\"} className='block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6' />\n                            </label>\n                            <label className='block text-sm font-medium leading-6 text-gray-900'>\n                                Port:\n                                <input type=\"text\" name=\"port\" defaultValue={\"27017\"} className='block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6' />\n                            </label>\n\n                            <button type=\"submit\" className='flex w-full justify-center rounded-md  bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600'>Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\n\n\nconst MongoOptions = () => {\n    const [databases, setDatabases] = useState<string[]>([]); // should be a global context\n    const [collections, setCollections] = useState<Record<string, string[]>>({});\n\n    const context = useContext(StatsContext);\n\n    if (!context) {\n        // handle the case where context is undefined\n        return null;\n    }\n    const { stats, handleAnalyzeCollections } = context;\n\n    const mongoURL = localStorage.getItem('mongoURL');\n\n    const handleShowDatabases = async () => {\n        try {\n            const response = await fetch('http://localhost:4000/query-databases', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'mongoURL': mongoURL as string,\n                },\n            });\n            const data = await response.json();\n            setDatabases(data);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleLoadCollections = async (database: string) => {\n        try {\n            const response = await fetch(`http://localhost:4000/query/${database}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'mongoURL': mongoURL as string,\n                },\n            });\n            const data = await response.json();\n            setCollections(prevState => ({ ...prevState, [database]: data }));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleAnalyze = async (database: string, collection: string) => {\n        try {\n            await handleAnalyzeCollections(mongoURL as string, database, collection);\n            // console.log(stats);\n        } catch (error) {\n            console.error(error);\n            // handle error\n        }\n    };\n\n    if (!mongoURL) {\n        return null;\n    }\n    else {\n        return (\n            <>\n                <div className='flex min-h-full flex-col justify-center px-6 py-12 lg:px-8'>\n                    <h1 className='mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900'>Connected to MongoDB</h1>\n\n                    <div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n                        <p className='text-center text-gray-900'>URL: {mongoURL}</p>\n                        {databases.length > 0 && (\n                            <ul className='mt-4'>\n                                {databases.map((database) => (\n                                    <li key={database} className='mb-2'>\n                                        <a\n                                            href={`#${database}`}\n                                            className='hover:underline text-blue-500 hover:text-blue-700'\n                                            onClick={() => handleLoadCollections(database)}\n                                        >\n                                            ├─ {database}\n                                        </a>\n                                        <ul className='ml-4'>\n                                            {collections[database]?.map((collection, index, arr) => (\n                                                <li key={collection} className='mb-2'>\n                                                    <a\n                                                        href={`#${collection}`}\n                                                        className='hover:underline text-blue-500 hover:text-blue-700'\n                                                        onClick={() => handleAnalyze(database, collection)}\n                                                    >\n                                                        {index === arr.length - 1 ? '└─ ' : '│─ '}{collection}\n                                                    </a>\n\n\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                        <button\n                            onClick={handleShowDatabases}\n                            className='flex w-full justify-center rounded-md bg-blue-500 text-white py-2 px-4 mt-4 hover:bg-blue-700'\n                        >\n                            Show all databases\n                        </button>\n                        <button\n                            onClick={deleteMongoURL}\n                            className='flex w-full justify-center rounded-md bg-red-500 text-white py-2 px-4 mt-4 hover:bg-red-700'\n                        >\n                            Logout\n                        </button>\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nconst LoadingOverlay = () => {\n    return (\n        <div className='fixed flex items-center justify-center w-full h-full'>\n            <div className='w-32 h-32 slow-spin bg-opacity-0'>LADEANIMATION!!</div>\n        </div>\n    );\n}\n\n\nconst SchemaStats = () => {\n    const context = useContext(StatsContext);\n    const [queries, setQueries] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selectedRows, setSelectedRows] = useState([]);\n    const [queriesCopy, setQueriesCopy] = useState({});\n\n    if (!context) {\n        // handle the case where context is undefined\n        return null;\n    }\n    const { stats, database, collection, handleAnalyzeCollections, updateStats } = context;\n\n    const handleRowClick = (name) => {\n        if (selectedRows.includes(name)) {\n            setSelectedRows(selectedRows.filter(row => row !== name));\n        } else {\n            setSelectedRows([...selectedRows, name]);\n        }\n    };\n\n    const getColorBasedOnProbability = (probability: Number) => {\n        // change hsl based on probability\n        const hue = probability * 120;\n        const saturation = 100;\n        const lightness = 50;\n        return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n    }\n\n    const getWidthBasedOnProbability = (probability: Number) => {\n        return `${probability * 100}%`;\n    }\n\n    /* const queryToJSON = () => {\n        const query = { $and: queries };\n        return query;\n    } */\n\n    const addToQuery = (key) => {\n        handleRowClick(key);\n\n        const newQuery = { [key]: { $exists: true } };\n        setQueries((prevQueries) => {\n            let updatedQueries;\n            const existingQueryIndex = prevQueries.findIndex(query => JSON.stringify(query) === JSON.stringify(newQuery));\n\n            if (existingQueryIndex !== -1) {\n                // Query exists, remove it\n                updatedQueries = [...prevQueries];\n                updatedQueries.splice(existingQueryIndex, 1);\n            } else {\n                // Query doesn't exist, add it\n                updatedQueries = [...prevQueries, newQuery];\n            }\n\n            // Send the updated query\n            if (updatedQueries.length > 1) {\n                sendQuery({ $and: updatedQueries }, database, collection);\n                setQueriesCopy({ $and: updatedQueries }); // deep copy for printing\n            } else if (updatedQueries.length === 1) { // only one query, no need for an $and\n                sendQuery(updatedQueries[0], database, collection);\n                setQueriesCopy(updatedQueries[0]); // deep copy for printing\n            } else {\n                // Handle case when there are no queries\n                sendQuery({}, database, collection);\n            }\n\n            return updatedQueries;\n        });\n    };\n\n    const sendQuery = async (query, database, collection) => {\n        // console.log(query);\n        console.log(database, collection);\n        const url = `http://localhost:4000/query/${database}/${collection}`;\n        try {\n            setLoading(true);\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'mongoURL': localStorage.getItem('mongoURL') as string,\n                },\n                body: JSON.stringify(query),\n            });\n            const data = await response.json();\n\n            // show loading overlay\n            // setLoading(true);\n            // hide loading overlay when data is received\n            // setLoading(false);\n            //console.log(data.schema);\n            //console.log(data.collections);\n            updateStats(data.schema);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n\n    };\n\n    if (loading) {\n        return <LoadingOverlay />;\n    }\n\n    return (\n        <>\n            <table className=\"m-5\">\n                <thead>\n                    <tr>\n                        <th className=\"text-left\">key</th>\n                        <th className=\"text-left\">type</th>\n                        <th className=\"text-right\">count</th>\n                        <th className=\"text-right\">probability</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {stats.map((item, index) => (\n                        <tr\n                            key={item.name}\n                            className={`${index % 2 === 0 ? 'even-row' : 'odd-row'} ${selectedRows.includes(item.name) ? 'selected-row' : ''}`}\n                            onClick={() => addToQuery(item.name)}\n                        >\n                            <td className=\"text-left monospace p-2\">{item.name}</td>\n                            <td className=\"text-left monospace p-2\">{item.type.toString()}</td>\n                            <td className=\"text-right monospace p-2\">{item.count.toString()}</td>\n                            <td\n                                className=\"text-right monospace p-2\"\n                            >\n                                <div style={{\n                                    width: getWidthBasedOnProbability(item.probability),\n                                    backgroundColor: getColorBasedOnProbability(item.probability),\n                                    height: '100%'\n                                }}>{item.probability.toFixed(2).toString()}</div>\n                            </td>\n\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"m-5\">\n                <b>Query:</b>\n                <p style={{ fontSize: 'small' }} className='monospace'>\n                    {JSON.stringify(queriesCopy, null, 2)}\n                </p>\n            </div>\n        </>\n    )\n}\n\nconst DataDetails = () => {\n    const context = useContext(StatsContext);\n    if (!context) {\n        // handle the case where context is undefined\n        return null;\n    }\n    const { stats, handleAnalyzeCollections, updateStats } = context;\n    // console.log(stats)\n\n\n    return (\n        <>\n            <div className='flex min-h-full flex-col justify-start px-6 py-12 lg:px-8'>\n                <h1 className='mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900'>Key Values</h1>\n                {stats.map((item, index) => (\n                    <div key={item.name} className='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n                        <p className='text-center text-gray-900'>key: {item.name}</p>\n                        {item.types && Object.entries(item.types).map(([typeKey, typeValues], typeIndex) => (\n                            <div key={typeIndex}>\n                                <b><h2>type: {typeKey}</h2></b>\n                                <ul>\n                                    {typeValues.map((value, valueIndex) => (\n                                        <li key={valueIndex}>{value}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n}\n\n\nconst deleteMongoURL = () => {\n    localStorage.removeItem('mongoURL');\n    window.location.reload();\n};\n\nconst MongoREST = () => {\n    return (\n        <>\n            <div className='flex'>\n                <StatsFetcher>\n                    <div className='w-1/4'>\n                        <MongoLogin />\n                        <MongoOptions />\n                    </div>\n                    <div className='w-1/3'>\n                        <SchemaStats />\n                    </div>\n                    <div className='w-1/3'>\n                        <DataDetails />\n                    </div>\n                </StatsFetcher>\n            </div>\n        </>\n    );\n}\n\n\n\n\nexport { MongoREST };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}